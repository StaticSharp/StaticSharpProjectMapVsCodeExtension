import { PageError } from '../ProjectMapData/LanguageServerContract/PageError';

export class PageErrorDescription
{
    static getShortDescription(error: PageError)
    {
        switch(error)
        {
            case PageError.syntaxErrors:
                return "Page definition has syntax errors"
            case PageError.locationNotMatchDefinition:
                return "Page definition does not match file location"
            case PageError.pageNameNotMatchRouteName:
                return "Page name does not match route name"
            case PageError.multiplePagesPerFile:
                return "Multiple pages defineded in a single file"
            case PageError.pageHasMultipleDefinitionParts:
                return "Page has more than one definition part (\"partial\" class defnitions)"
            case PageError.multiupleNamespacesPerFile:
                return "Page file has more than one namespace statements"

            default:
                return "Unknown error"
        }
    }

    static getAdditionalDescription(error: PageError)
    {
        switch(error)
        {
            case PageError.locationNotMatchDefinition:
                return "Page class name must be the same as containing filename. Path to file must match namespaces of page class"
            case PageError.pageNameNotMatchRouteName:
                return 'Page class name must start with route name and optionally has a language suffix. E.g. page "SomePage_En" for route "SomePage"'
            case PageError.multiplePagesPerFile:
                return "Only one page must be defined in a single file"
            case PageError.pageHasMultipleDefinitionParts:
                return "Page must not have partial definitions other than generated by StaticSharp"
            case PageError.multiupleNamespacesPerFile:
                return "Page file shoud contain only one namespace definition"
            default:
                return undefined
        }
    }
}